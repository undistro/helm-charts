{{- $release := "zora" -}}
{{- $namespace := "zora-system" -}}
{{- $repoURL := "https://charts.undistro.io" -}}
{{- $repoName := "undistro" -}}
{{- $title := .Name | title -}}

# {{ $title }} Helm Chart

{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

## Installing the Chart

To install the chart with the release name `{{ $release }}`:

```console
helm repo add {{ $repoName }} {{ $repoURL }} --force-update
helm repo update {{ $repoName }}
helm upgrade --install {{ $release }} {{ $repoName }}/{{ template "chart.name" . }} \
  -n {{ $namespace }} \
  --version {{ template "chart.version" . }} \
  --create-namespace \
  --wait \
  --set clusterName="$(kubectl config current-context)"
```

These commands deploy {{ $title }} on the Kubernetes cluster with the default configuration.

The [Parameters](#parameters) section lists the available parameters that can be configured during installation.

> **Tips:**
>
> - List all charts available in `{{ $repoName }}` repo using `helm search repo {{ $repoName }}`
>
> - Update `{{ $repoName }}` chart repository using `helm repo update {{ $repoName }}`
>
> - List all versions available of `{{ $repoName }}/{{ $release }}` chart using `helm search repo {{ $repoName }}/{{ $release }} --versions`
>
> - List all releases using `helm list`
>
> - Get the notes provided by `{{ $release }}` release using `helm get notes {{ $release }} -n {{ $namespace }}`

## Uninstalling the Chart

To uninstall/delete the `{{ $release }}` release:

```console
$ helm delete {{ $release }}
```

The command removes all the Kubernetes components associated with the chart and deletes the release.

## Parameters

The following table lists the configurable parameters of the {{ $title }} chart and their default values.

{{ template "chart.valuesTable" . }}

Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,

```console
$ helm install {{ $release }} \
  --set server.service.port=8080 {{ $repoName }}/{{ template "chart.name" . }}
```

Alternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart. For example,

```console
$ helm install {{ $release }} -f values.yaml {{ $repoName }}/{{ template "chart.name" . }}
```

> **Tip**: You can use the default [values.yaml](values.yaml)
