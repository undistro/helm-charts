# Copyright 2023 Undistro Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: zora.undistro.io/v1alpha1
kind: Plugin
metadata:
  name: trivy
  labels:
    {{- include "zora.labels" . | nindent 4 }}
spec:
  type: vulnerability
  image: "{{ .Values.scan.plugins.trivy.image.repository }}:{{ .Values.scan.plugins.trivy.image.tag }}"
  {{- if .Values.scan.plugins.trivy.resources }}
  resources:
    {{- toYaml .Values.scan.plugins.trivy.resources | nindent 4 }}
  {{- end }}
  mountCustomChecksVolume: false
  securityContext:
    allowPrivilegeEscalation: false
  {{- with .Values.scan.plugins.trivy.envFrom }}
  envFrom:
    {{- toYaml . | nindent 4}}
  {{- end }}
  env:
    - name: TRIVY_IGNORE_VULN_DESCRIPTIONS
      value: {{ .Values.scan.plugins.trivy.ignoreDescriptions | quote }}
    {{- with .Values.scan.plugins.trivy.env }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if .Values.httpsProxy }}
    - name: HTTPS_PROXY
      value: {{ .Values.httpsProxy | quote }}
    - name: NO_PROXY
      value: {{ .Values.noProxy | quote }}
    {{- end }}
  {{- if .Values.scan.plugins.trivy.podAnnotations }}
  annotations:
    {{- toYaml .Values.scan.plugins.trivy.podAnnotations | nindent 4 }}
  {{- end }}
  command:
    - /bin/sh
    - -c
    - |
      time trivy k8s \
        --debug \
        --no-progress \
        --all-namespaces \
        --scanners=vuln \
        -f=json \
        {{- if .Values.scan.plugins.trivy.ignoreUnfixed }}
        --ignore-unfixed \
        {{- end }}
        -o $(DONE_DIR)/results.json \
        cluster

      exitcode=$(echo $?)
      if [ $exitcode -ne 0 ]; then
        echo "ERROR" > $(DONE_DIR)/error
      else
        echo $(DONE_DIR)/results.json > $(DONE_DIR)/done
      fi
      ls -lh $(DONE_DIR)/
      exit $exitcode
