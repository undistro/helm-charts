# Copyright 2022 Undistro Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: zora.undistro.io/v1alpha1
kind: Plugin
metadata:
  name: popeye
  labels:
    {{- include "zora.labels" . | nindent 4 }}
spec:
  type: misconfiguration
  image: "{{ .Values.scan.plugins.popeye.image.repository }}:{{ .Values.scan.plugins.popeye.image.tag }}"
  {{- if .Values.scan.plugins.popeye.resources }}
  resources:
    {{- toYaml .Values.scan.plugins.popeye.resources | nindent 4 }}
  {{- end }}
{{- if .Values.scan.plugins.popeye.skipInternalResources }}
  envFrom:
    - configMapRef:
        name: popeye-config
        optional: true
{{- end }}
  securityContext:
    runAsNonRoot: true
    allowPrivilegeEscalation: false
  {{- if .Values.scan.plugins.popeye.podAnnotations }}
  annotations:
    {{- toYaml .Values.scan.plugins.popeye.podAnnotations | nindent 4 }}
  {{- end }}
  command:
    - /bin/sh
    - -c
    - |
      start=$(date +%s)
      echo Scanning...
      {{- if .Values.scan.plugins.popeye.skipInternalResources }}
      echo "$SPINACH" > /tmp/spinach.yml
      sed -i "s+CRONJOB_NAMESPACE+$CRONJOB_NAMESPACE+g" /tmp/spinach.yml
      sed -i "s+CRONJOB_NAME+$CRONJOB_NAME+g" /tmp/spinach.yml
      {{- end }}
      POPEYE_REPORT_DIR=$(DONE_DIR) \
      /bin/popeye \
        -o json \
        {{- if .Values.scan.plugins.popeye.skipInternalResources }}
        -f /tmp/spinach.yml \
        {{- end }}
        --all-namespaces \
        --force-exit-zero \
        --save \
        --output-file results.json
      exitcode=$(echo $?)
      if [ $exitcode -ne 0 ]; then
        echo "ERROR" > $(DONE_DIR)/error
        cat /tmp/popeye.log
      else
        echo $(DONE_DIR)/results.json > $(DONE_DIR)/done
      fi
      ls -lh $(DONE_DIR)/
      end=$(date +%s)
      echo "Scan has finished in $(($end-$start)) seconds with exit code $exitcode"
      exit $exitcode
