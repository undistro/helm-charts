apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zora-saas.fullname" . }}
  labels:
    {{- include "zora-saas.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "zora-saas.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zora-saas.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zora-saas.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: zora-saas-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            - --log-level={{ .Values.log.level }}
            - --log-encoding={{ .Values.log.encoding }}
            - --read-timeout={{ .Values.readTimeout }}
            - --write-timeout={{ .Values.writeTimeout }}
            {{- if .Values.scheduleValidation }}
            - --schedule-validation
            {{- end }}
            - --block-new-users={{ .Values.blockNewUsers }}
          envFrom:
            - secretRef:
                name: {{ .Values.database.secret }}
                optional: false
            - secretRef:
                optional: false
                name: {{ .Values.secretName }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3003
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.proxy.enabled }}
        - name: saas-proxy
          image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
          imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
          args:
            - "--secure-listen-address=0.0.0.0:{{ .Values.proxy.port }}"
            - "--upstream=http://127.0.0.1:3003"
            - "--logtostderr={{ .Values.proxy.log.toStderr }}"
            - "--v={{ .Values.proxy.log.level }}"
          ports:
            - containerPort: {{ .Values.proxy.port }}
              name: https
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 65532
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
